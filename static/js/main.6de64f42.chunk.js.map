{"version":3,"sources":["components/Loader.js","components/Showproblems.js","components/Error.js","Loadproblems.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","props","id","Showusers","useState","search","setSearch","page","setPage","diffIncreaing","setDiff","solvecntIncreaing","setSolvedcnt","selectedTags","setSelectedtags","filterTags","setFiltertags","status","setStatus","showData","setData","useEffect","temp","problems","filter","problem","flag","i","length","tags","indexOf","problemStatus","name","toLowerCase","trim","sort","a","b","rating","serialNumber","prev","user","className","type","placeholder","onChange","e","target","value","ele","map","index","onClick","innerText","splice","currentTarget","parentElement","removeTag","solvedCount","slice","href","contestId","push","Math","floor","showpageNums","Error","error","Loadproblems","loadingState","errorState","errorMsg","loading","setLoading","setproblems","Tags","setTags","fetch","then","Response","json","data","mp","Map","result","forEach","set","problemStatistics","tag","has","User","verdict","get","arr","val","tempTags","key","catch","Showproblems","App","setuser","onSubmit","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6de64f42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./loader.css\";\r\nfunction Loader(props) {\r\n  return (\r\n    <div id=\"loader\">\r\n      <div id=\"box\">\r\n        <div id=\"l\">\r\n          <p>L</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"o\">\r\n          <p>O</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"a\">\r\n          <p>A</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"d\">\r\n          <p>D</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"i\">\r\n          <p>I</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"n\">\r\n          <p>N</p>\r\n          <div></div>\r\n        </div>\r\n        <div id=\"g\">\r\n          <p>G</p>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MdClear } from 'react-icons/md';\r\nfunction Showusers(props) {\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [diffIncreaing, setDiff] = useState(true);\r\n\tconst [solvecntIncreaing, setSolvedcnt] = useState(true);\r\n\tconst [selectedTags, setSelectedtags] = useState([]);\r\n\tconst [filterTags, setFiltertags] = useState('');\r\n\tconst [status, setStatus] = useState('');\r\n\tconst [showData, setData] = useState([]);\r\n\tuseEffect(() => {\r\n\t\t//------------------filtedred questions on the basis of tags------------------\r\n\t\tlet temp = props.problems;\r\n\r\n\t\ttemp = temp.filter((problem) => {\r\n\t\t\tlet flag = true;\r\n\t\t\tfor (let i = 0; i < selectedTags.length; i++) {\r\n\t\t\t\tif (problem.tags.indexOf(selectedTags[i]) === -1) {\r\n\t\t\t\t\tflag = flag && false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tflag = flag && true;\r\n\t\t\t\t}\r\n\t\t\t\tif (flag === false) return false;\r\n\t\t\t}\r\n\t\t\treturn flag;\r\n\t\t});\r\n\r\n\t\t//------------------filtedred questions on the basis of status------------------\r\n\t\tif (status !== '') {\r\n\t\t\ttemp = temp.filter((problem) => {\r\n\t\t\t\treturn problem.problemStatus === status;\r\n\t\t\t});\r\n\t\t}\r\n\t\ttemp = temp.filter(\r\n\t\t\t(problem) =>\r\n\t\t\t\tproblem.name.toLowerCase().indexOf(search.toLowerCase().trim()) !== -1\r\n\t\t);\r\n\t\ttemp.sort((a, b) => {\r\n\t\t\tif (a.rating !== b.rating) return a.rating - b.rating;\r\n\t\t\telse return a.serialNumber - b.serialNumber;\r\n\t\t});\r\n\t\tsetPage(1);\r\n\t\tsetData((prev) => [...temp]);\r\n\t}, [selectedTags, status, search]);\r\n\tfunction removeTag(e) {\r\n\t\tlet temp = [...selectedTags];\r\n\t\ttemp.splice(\r\n\t\t\tselectedTags.indexOf(\r\n\t\t\t\te.currentTarget.parentElement.innerText.trim().toLowerCase()\r\n\t\t\t),\r\n\t\t\t1\r\n\t\t);\r\n\t\tsetSelectedtags((prev) => temp);\r\n\t}\r\n\tfunction changeOrderByRating() {\r\n\t\tsetDiff((prev) => !prev);\r\n\t\tif (diffIncreaing) {\r\n\t\t\tlet temp = [...showData];\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\tif (a.rating !== b.rating) return b.rating - a.rating;\r\n\t\t\t\telse return a.serialNumber - b.serialNumber;\r\n\t\t\t});\r\n\t\t\tsetData((prev) => [...temp]);\r\n\t\t} else {\r\n\t\t\tlet temp = [...showData];\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\tif (a.rating !== b.rating) return a.rating - b.rating;\r\n\t\t\t\telse return a.serialNumber - b.serialNumber;\r\n\t\t\t});\r\n\r\n\t\t\tsetData((prev) => [...temp]);\r\n\t\t}\r\n\t}\r\n\tfunction changeOrderBySolvedcnt() {\r\n\t\tsetSolvedcnt((prev) => !prev);\r\n\t\tif (solvecntIncreaing) {\r\n\t\t\tlet temp = [...showData];\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\tif (a.solvedCount !== b.solvedCount)\r\n\t\t\t\t\treturn a.solvedCount - b.solvedCount;\r\n\t\t\t\telse return a.serialNumber - b.serialNumber;\r\n\t\t\t});\r\n\t\t\tsetData((prev) => [...temp]);\r\n\t\t} else {\r\n\t\t\tlet temp = [...showData];\r\n\t\t\ttemp.sort((a, b) => {\r\n\t\t\t\tif (a.solvedCount !== b.solvedCount)\r\n\t\t\t\t\treturn b.solvedCount - a.solvedCount;\r\n\t\t\t\telse return a.serialNumber - b.serialNumber;\r\n\t\t\t});\r\n\t\t\tsetData((prev) => [...temp]);\r\n\t\t}\r\n\t}\r\n\tconst problemsPerPage = 50;\r\n\tfunction showpageNums() {\r\n\t\tlet temp = [];\r\n\t\tif (page > 1) {\r\n\t\t\ttemp.push(\r\n\t\t\t\t<span id='diffrent' onClick={() => setPage((prev) => prev - 1)}>\r\n\t\t\t\t\tPrev.\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (Math.floor(showData.length / problemsPerPage) > 1)\r\n\t\t\tfor (\r\n\t\t\t\tlet i = page;\r\n\t\t\t\ti < page + 5 && i <= Math.floor(showData.length / problemsPerPage) + 1;\r\n\t\t\t\ti++\r\n\t\t\t) {\r\n\t\t\t\tif (i === page)\r\n\t\t\t\t\ttemp.push(\r\n\t\t\t\t\t\t<p id='highlight' onClick={() => setPage(i)}>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t);\r\n\t\t\t\telse\r\n\t\t\t\t\ttemp.push(\r\n\t\t\t\t\t\t<p id='normal' onClick={() => setPage(i)}>\r\n\t\t\t\t\t\t\t{i}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t);\r\n\t\t\t}\r\n\t\tif (page < Math.floor(showData.length / problemsPerPage) + 1)\r\n\t\t\ttemp.push(\r\n\t\t\t\t<span id='diffrent' onClick={() => setPage((prev) => prev + 1)}>\r\n\t\t\t\t\tNext\r\n\t\t\t\t</span>\r\n\t\t\t);\r\n\t\treturn temp;\r\n\t}\r\n\treturn (\r\n\t\t<div id='container'>\r\n\t\t\t<h1>Codeforces Problems</h1>\r\n\t\t\t<h2>User: {props.user}</h2>\r\n\t\t\t<ul className='dropdown'>\r\n\t\t\t\t<li className='searchProblem'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tid='searchProblem'\r\n\t\t\t\t\t\tplaceholder='Find problem'\r\n\t\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</li>\r\n\r\n\t\t\t\t<li className='status'>\r\n\t\t\t\t\t<select onChange={(e) => setStatus((prev) => e.target.value)}>\r\n\t\t\t\t\t\t<option value=''>All</option>\r\n\t\t\t\t\t\t<option value='Todo'>Todo</option>\r\n\t\t\t\t\t\t<option value='Tried'>Tried</option>\r\n\t\t\t\t\t\t<option value='Solved'>Solved</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className='tags'>\r\n\t\t\t\t\tTags\r\n\t\t\t\t\t<ul id='dropbox' className='filterTags'>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tid='filterTags'\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\treturn setFiltertags(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{props.tags\r\n\t\t\t\t\t\t\t.filter((ele) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\tele.toLowerCase().indexOf(filterTags.toLowerCase()) !== -1\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.map((ele, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedtags((prev) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprev.indexOf(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.innerText.trim().toLowerCase()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t) === -1\r\n\t\t\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.innerText.trim().toLowerCase(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else return prev;\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{ele}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t<div className='Showtags'>\r\n\t\t\t\t{' '}\r\n\t\t\t\t{selectedTags.map((ele, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<p id='tags' key={index}>\r\n\t\t\t\t\t\t\t{ele}\r\n\t\t\t\t\t\t\t<MdClear className='icon' onClick={(e) => removeTag(e)} />{' '}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}{' '}\r\n\t\t\t</div>\r\n\t\t\t<p id='results'>{showData.length} results</p>\r\n\t\t\t<div className='table-container'>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th className='Serial'>#</th>\r\n\t\t\t\t\t\t\t<th className='Problem'>Problem</th>\r\n\t\t\t\t\t\t\t<th className='Status'>Status</th>\r\n\t\t\t\t\t\t\t<th className='Rating' onClick={changeOrderByRating}>\r\n\t\t\t\t\t\t\t\tRating\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th className='Solvedcnt' onClick={changeOrderBySolvedcnt}>\r\n\t\t\t\t\t\t\t\tSolved Count\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{showData\r\n\t\t\t\t\t\t\t.slice((page - 1) * problemsPerPage, page * problemsPerPage)\r\n\t\t\t\t\t\t\t.map((problem, index) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<td id='number'>{problem.serialNumber}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\t\t\t\t\t\thref={`https://codeforces.com/problemset/problem/${problem.contestId}/${problem.index}`}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{problem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id='status'>{problem.problemStatus}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id='rating'>{problem.rating}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td id='count'>{problem.solvedCount}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t{showData.length === 0 ? <p id='notFound'>No matching problem</p> : ''}\r\n\t\t\t</div>\r\n\t\t\t<div id='pages'>{showpageNums()}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Showusers;\r\n","import React from \"react\";\r\n\r\nfunction Error(props) {\r\n  return (\r\n    <div>\r\n      <h1>{props.error}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Loader from './components/Loader';\r\nimport Showproblems from './components/Showproblems';\r\nimport Error from './components/Error';\r\nimport './App.css';\r\n\r\nfunction Loadproblems(props) {\r\n\t//----------state for loading and error-------------------------------\r\n\tconst [loading, setLoading] = useState({\r\n\t\tloadingState: true,\r\n\t\terrorState: false,\r\n\t\terrorMsg: null,\r\n\t});\r\n\t//------------------------state for problems--------------------\r\n\tconst [problems, setproblems] = useState([]);\r\n\tconst [Tags, setTags] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\t//---------------------fetching the problems -----------------------\r\n\t\tfetch('https://codeforces.com/api/problemset.problems')\r\n\t\t\t.then((Response) => {\r\n\t\t\t\treturn Response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\t//---------------------if Codeforces API return status=\"OK\" then proceed -----------------------\r\n\t\t\t\tif (data.status === 'OK') {\r\n\t\t\t\t\t//---------------------creating a map to map every problem to its data -----------------------\r\n\t\t\t\t\tlet mp = new Map();\r\n\t\t\t\t\tlet tags = new Map();\r\n\t\t\t\t\tdata.result.problems.forEach((ele, index) => {\r\n\t\t\t\t\t\t//---------------------mapping every problem with key as=\"contestId,index of problem\" -----------------------\r\n\t\t\t\t\t\tmp.set(`${ele.contestId}${ele.index}`, {\r\n\t\t\t\t\t\t\t...ele,\r\n\t\t\t\t\t\t\t...data.result.problemStatistics[index],\r\n\t\t\t\t\t\t\tproblemStatus: 'Todo', // adding problemStatus to see that this person had soled this problem or not\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tele.tags.forEach((tag) => {\r\n\t\t\t\t\t\t\tif (!tags.has(tag)) {\r\n\t\t\t\t\t\t\t\ttags.set(tag, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t//---------------------fetching the submissions of loged in user -----------------------\r\n\t\t\t\t\tfetch(`https://codeforces.com/api/user.status?handle=${props.User}`)\r\n\t\t\t\t\t\t.then((Response) => {\r\n\t\t\t\t\t\t\treturn Response.json();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\t\t//---------------------if Codeforces API return status=\"OK\" then proceed -----------------------\r\n\t\t\t\t\t\t\tif (data.status === 'OK') {\r\n\t\t\t\t\t\t\t\t//---------------------looking into every submission-----------------------\r\n\t\t\t\t\t\t\t\tdata.result.forEach((ele) => {\r\n\t\t\t\t\t\t\t\t\tif (mp.has(`${ele.problem.contestId}${ele.problem.index}`)) {\r\n\t\t\t\t\t\t\t\t\t\tif (typeof ele.verdict !== 'undefined') {\r\n\t\t\t\t\t\t\t\t\t\t\t//---------------------if user had Successfully submitted code for this problem  -----------------------\r\n\t\t\t\t\t\t\t\t\t\t\tif (ele.verdict === 'OK') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet temp = mp.get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${ele.problem.contestId}${ele.problem.index}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t//---------------------marking problem status \"OK\" -----------------------\r\n\t\t\t\t\t\t\t\t\t\t\t\ttemp.problemStatus = 'Solved';\r\n\t\t\t\t\t\t\t\t\t\t\t\tmp.set(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${ele.problem.contestId}${ele.problem.index}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttemp\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tlet temp = mp.get(\r\n\t\t\t\t\t\t\t\t\t\t\t\t`${ele.problem.contestId}${data.problem.index}`\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t//---------------------if problemStatus is not OK but user had Tried the problem -----------------------\r\n\t\t\t\t\t\t\t\t\t\t\tif (temp.problemStatus !== 'Solved')\r\n\t\t\t\t\t\t\t\t\t\t\t\ttemp.problemStatus = 'Tried';\r\n\t\t\t\t\t\t\t\t\t\t\tmp.set(\r\n\t\t\t\t\t\t\t\t\t\t\t\t`${ele.problem.contestId}${ele.problem.index}`,\r\n\t\t\t\t\t\t\t\t\t\t\t\ttemp\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t//--------------------extracting problems from map to array\r\n\t\t\t\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\t\t\t\tfor (let [key, val] of mp) {\r\n\t\t\t\t\t\t\t\t\tarr.push(val);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (let i = 1; i <= arr.length; i++) {\r\n\t\t\t\t\t\t\t\t\tif (typeof arr[i - 1].rating === 'undefined')\r\n\t\t\t\t\t\t\t\t\t\tarr[i - 1].rating = 10000;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tarr.sort((a, b) => a.rating - b.rating);\r\n\t\t\t\t\t\t\t\tfor (let i = 1; i <= arr.length; i++) {\r\n\t\t\t\t\t\t\t\t\tarr[i - 1].serialNumber = i;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet tempTags = [];\r\n\t\t\t\t\t\t\t\tfor (let [key, val] of tags) {\r\n\t\t\t\t\t\t\t\t\ttempTags.push(key);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tsetproblems((prev) => {\r\n\t\t\t\t\t\t\t\t\treturn [...prev, ...arr];\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tsetTags((prev) => {\r\n\t\t\t\t\t\t\t\t\treturn [...prev, ...tempTags];\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tsetLoading((prev) => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tloadingState: false,\r\n\t\t\t\t\t\t\t\t\t\terrorState: false,\r\n\t\t\t\t\t\t\t\t\t\terrorMsg: null,\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tsetLoading((prev) => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\t\tloadingState: false,\r\n\t\t\t\t\t\t\t\t\t\terrorState: true,\r\n\t\t\t\t\t\t\t\t\t\terrorMsg: 'User Not found',\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\tsetLoading((prev) => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\t\t\tloadingState: false,\r\n\t\t\t\t\t\t\t\t\terrorState: true,\r\n\t\t\t\t\t\t\t\t\terrorMsg: 'Something went wrong',\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetLoading((prev) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\t\tloadingState: false,\r\n\t\t\t\t\t\t\terrorState: true,\r\n\t\t\t\t\t\t\terrorMsg: 'Something went wrong',\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetLoading((prev) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prev,\r\n\t\t\t\t\t\tloadingState: false,\r\n\t\t\t\t\t\terrorState: true,\r\n\t\t\t\t\t\terrorMsg: 'Something went wrong',\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, [props.User]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{loading.loadingState ? (\r\n\t\t\t\t<Loader />\r\n\t\t\t) : loading.errorState ? (\r\n\t\t\t\t<Error error={loading.errorMsg} />\r\n\t\t\t) : (\r\n\t\t\t\t<Showproblems problems={problems} tags={Tags} user={props.User} />\r\n\t\t\t)}\r\n\t\t\t{loading.loadingState ? (\r\n\t\t\t\t''\r\n\t\t\t) : loading.errorState ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<p id='end'>Built & designed with ❤️</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Loadproblems;\r\n","import React, { useState } from 'react';\r\nimport Loadproblems from './Loadproblems';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [user, setuser] = useState(null);\r\n\treturn (\r\n\t\t<div className='blurlayer'>\r\n\t\t\t{user === null ? (\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsetuser(e.target.user.value);\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<p>Enter Codeforces handle</p>\r\n\t\t\t\t\t<input id='user' placeholder='Like- tourist' />\r\n\t\t\t\t</form>\r\n\t\t\t) : (\r\n\t\t\t\t<Loadproblems User={user} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// // Bootstrap Bundle JS\r\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}